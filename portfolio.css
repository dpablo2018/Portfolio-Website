/* Whenever the user resizes the webpage, the page seizes the content inside to fit the resized webpage*/
.container{
    display: flex; 
}

#rise{
    text-align: center;
    
}

.colour{
    background-color: red;
    height: 250px;
    text-align: center;
}
/*Made a scroll-behavior:smooth si when the user clicks on the nav bar, it scrolls to the s eciton that follows  */ 
#section1{
    scroll-behavior: smooth;
    background-color: red;
    height: 250px;
}



.navbar {
    text-align: center;
}

#myself{
    text-align: center;
}

#second{

}

#third{

}

.foot {
    background-color: rgb(0, 162, 255);
}

.bottom {
    text-align: center;
    
}

#under {
    text-decoration: underline;
}

/*
.box{
    box-sizing: border-box;
    width: 500px;
    padding: 200px;
    border-radius: 6px;
    background-color: green;
}

.box2{
    box-sizing: border-box;
    width: 500px;
    padding: 200px;
    border-radius: 6px;
    background-color: green;
}


.box3{
    box-sizing: border-box;
    width: 500px;
    padding: 200px;
    border-radius: 6px;
    background-color: green;
}
*/

/* I was messing around with grid,until  ultimately I realized flexbox was easier than creating a whole grid*/
.container{
    display: grid;
    height: 100vh;
    grid-template-columns: 1fr;
    grid-template-areas: sidebar header header sidebar;
}

.attempt{
    box-sizing: border-box;
    width: 500px;
    padding: 200px;
    border-radius: 6px;
    background-color: blue;
    color: white;
    display: block;
    text-align: center;
    text-decoration: none;
}

.attempt2{
    box-sizing: border-box;
    width: 250px;
    padding: 100px;
    border-radius: 6px;
    background-color: green;
    color: white;
    text-align: center;
    text-decoration: none;
}




